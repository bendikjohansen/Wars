// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wars.Buildings.Infrastructure.Data;

#nullable disable

namespace Wars.Buildings.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BuildingsContext))]
    [Migration("20240510091707_InitialBuildings")]
    partial class InitialBuildings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Buildings")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wars.Buildings.Domain.BuildingUpgrade", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Building")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VillageId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("VillageId");

                    b.ToTable("BuildingUpgrade", "Buildings");
                });

            modelBuilder.Entity("Wars.Buildings.Domain.Village", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Villages", "Buildings");
                });

            modelBuilder.Entity("Wars.Buildings.Domain.BuildingUpgrade", b =>
                {
                    b.HasOne("Wars.Buildings.Domain.Village", null)
                        .WithMany("UpgradeQueue")
                        .HasForeignKey("VillageId");

                    b.OwnsOne("Wars.Buildings.Domain.ResourceCollection", "Cost", b1 =>
                        {
                            b1.Property<Guid>("BuildingUpgradeId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Clay")
                                .HasColumnType("integer");

                            b1.Property<int>("Iron")
                                .HasColumnType("integer");

                            b1.Property<int>("Wood")
                                .HasColumnType("integer");

                            b1.HasKey("BuildingUpgradeId");

                            b1.ToTable("BuildingUpgrade", "Buildings");

                            b1.WithOwner()
                                .HasForeignKey("BuildingUpgradeId");
                        });

                    b.Navigation("Cost")
                        .IsRequired();
                });

            modelBuilder.Entity("Wars.Buildings.Domain.Village", b =>
                {
                    b.OwnsOne("Wars.Buildings.Domain.BuildingLevelRegistry", "BuildingLevels", b1 =>
                        {
                            b1.Property<string>("VillageId")
                                .HasColumnType("text");

                            b1.Property<int>("ClayPit")
                                .HasColumnType("integer");

                            b1.Property<int>("Headquarter")
                                .HasColumnType("integer");

                            b1.Property<int>("IronMine")
                                .HasColumnType("integer");

                            b1.Property<int>("LumberCamp")
                                .HasColumnType("integer");

                            b1.Property<int>("Warehouse")
                                .HasColumnType("integer");

                            b1.HasKey("VillageId");

                            b1.ToTable("Villages", "Buildings");

                            b1.WithOwner()
                                .HasForeignKey("VillageId");
                        });

                    b.Navigation("BuildingLevels")
                        .IsRequired();
                });

            modelBuilder.Entity("Wars.Buildings.Domain.Village", b =>
                {
                    b.Navigation("UpgradeQueue");
                });
#pragma warning restore 612, 618
        }
    }
}
